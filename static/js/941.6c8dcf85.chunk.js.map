{"version":3,"file":"static/js/941.6c8dcf85.chunk.js","mappings":"6ZAAO,IAAMA,EAAO,sCACPC,EAAU,mCACVC,EAAU,sCACVC,EAAa,2BAAuBF,EAAvB,mBACbG,EAAW,mBAAeH,EAAf,mBACXI,EAAY,4DAAwDJ,EAAxD,qDACZK,EAAgB,2BAAuBL,EAAvB,0BAChBM,EAAW,kEAA8DN,E,uICFzEO,EAAY,WAAO,IAAD,IAC3B,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,EAAYC,EAAAA,GAAAA,QACdC,GAAWC,EAAAA,EAAAA,QAAM,qBAACC,EAAAA,EAAAA,MAAcC,aAAf,aAAC,EAAqBC,YAAtB,QAA8B,WAcrD,OAXAC,EAAAA,EAAAA,YAAU,WACN,IACIC,EAAAA,EAAAA,IAAA,UAAatB,EAAAA,SAAb,OAAuBc,GAAvB,OAAiCV,EAAAA,cAAemB,MAAK,SAAAC,GACjDb,EAAaa,GACbX,EAAU,UACb,GAIJ,CAHC,SACEY,QAAQC,QACRb,EAAU,QACb,CACJ,GAAE,CAACC,IACW,UAAXF,GAEI,+BACI,UAAC,EAAAe,KAAD,CAAMC,GAAIZ,EAASa,QAAnB,WACI,sCACF,iDAIC,YAAXjB,GAEI,iCACI,SAAC,EAAAe,KAAD,CAAMC,GAAIZ,EAASa,QAAnB,UACI,wCAEJ,iCACI,gBACIC,MAAO,IACPC,IAAG,UAAK/B,EAAAA,SAAL,OAAeU,EAAUsB,KAAKC,aACjCC,IAAI,YAER,iCACI,wBAAKxB,EAAUsB,KAAKG,SACpB,qCACA,uBAAIzB,EAAUsB,KAAKI,kBAI3B,iCACI,wCACA,2BACI,yBACI,SAAC,EAAAT,KAAD,CAAMC,GAAG,OAAOd,QAASA,EAAzB,qBAIJ,yBACI,SAAC,EAAAa,KAAD,CAAMC,GAAG,SAASd,QAASA,EAA3B,8BAMZ,SAAC,EAAAuB,SAAD,CAAUC,UAAU,oDAApB,UACA,SAAC,KAAD,cAnCZ,CAyCH,C","sources":["components/url.jsx","pages/MovieSpec.jsx"],"sourcesContent":["export const baseUrl = `https://api.themoviedb.org/3/movie/`;\nexport const API_KEY = '6380ba142025380893178538a290f18b';\nexport const baseImgURL = `https://image.tmdb.org/t/p/original`;\nexport const onURLFromCast = `/credits?api_key=${API_KEY}&language=en-US`;\nexport const onMovieSpec = `?api_key=${API_KEY}&language=en-US`;\nexport const onMovieItems = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=`;\nexport const onURLfromReviews = `/reviews?api_key=${API_KEY}&language=en-US&page=1`;\nexport const onTrendings = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;","import axios from \"axios\"\nimport { baseUrl, onMovieSpec } from \"components/url\"\nimport { Suspense, useEffect, useRef, useState } from \"react\"\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\"\n\nexport const MovieSpec = () => { \n    const [movieInfo, setmovieInfo] = useState('')\n    const [status, setStatus] = useState('idle')\n    const { movieId } = useParams\n    const location = useRef(useLocation().state?.from ?? '/movies')\n    \n\n    useEffect(() => { \n        try {\n            axios.get(`${baseUrl}${movieId}${onMovieSpec}`).then(res => {\n                setmovieInfo(res)\n                setStatus('pending')\n            })\n        } catch { \n            console.error()\n            setStatus('error')\n        }\n    }, [movieId])\n    if (status === 'error')\n        return (\n            <> \n                <Link to={location.current}>\n                    <button>Back</button>\n                  <p>Some thing wrong</p>  \n                </Link>\n            </>     \n        )\n    if (status === 'pending') { \n        return (\n            <> \n                <Link to={location.current}>\n                    <button>Back</button>\n                </Link>\n                <>\n                    <img\n                        width={200}\n                        src={`${baseUrl}${movieInfo.data.poster_path}`}\n                        alt='poster'\n                    />\n                    <>\n                        <h1>{movieInfo.data.title}</h1>\n                        <p>Owerwiev</p>\n                        <p>{movieInfo.data.overview}</p>\n\n                    </>\n                </>\n                <>\n                    <p>Information</p>\n                    <ul>\n                        <li> \n                            <Link to='cast' movieId={movieId}>\n                                Cast \n                            </Link>\n                        </li>\n                        <li>\n                            <Link to='review' movieId={movieId}>\n                                Reviews \n                            </Link>\n                        </li>\n                    </ul>\n                </>\n                <Suspense fallback={<>Loading..........</>}>\n                <Outlet/>\n                </Suspense>\n            </>\n            \n        )\n    }\n}"],"names":["baseUrl","API_KEY","baseImgURL","onURLFromCast","onMovieSpec","onMovieItems","onURLfromReviews","onTrendings","MovieSpec","useState","movieInfo","setmovieInfo","status","setStatus","movieId","useParams","location","useRef","useLocation","state","from","useEffect","axios","then","res","console","error","Link","to","current","width","src","data","poster_path","alt","title","overview","Suspense","fallback"],"sourceRoot":""}